service: websocket-service
frameworkVersion: '2 || 3'
  
provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  role: arn:aws:iam::088639415603:role/eng-roles/rm_sqs_role
  region: ${opt:region, 'sa-east-1'}
  stage: ${opt:stage, 'dev'}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:DeleteItem"
        - "dynamodb:Scan"
      Resource:
        - Fn::GetAtt: [ChatTable, Arn]
    - Effect: Allow
      Action:
        - "websocket-service:ManageConnections"
      Resource:
        - "arn:aws:websocket-service:*:*:**/@connections/*"

package:
  exclude:
    - .gitignore
    - .git/**
    - .vscode
    - teste.json

functions:
  connectionHandler:
    handler: src/handler.connectionHandler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
  defaultHandler:
    handler: src/handler.defaultHandler
    events:
      - websocket:
          route: $default
  sendMessageHandler:
    handler: src/handler.sendMessageHandler
    events:
      - websocket:
          route: sendMessage
  createToken:
    handler: src/handler.createToken
    events:
      - http:
          path: api/token
          method: post
          cors:
            origin: '*'
            headers: '*'

resources:
  Resources:
    ChatTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
        - AttributeName: "connectionId"
          AttributeType: "S"
        KeySchema:
        - AttributeName: "connectionId"
          KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
        TableName: chatIdTable